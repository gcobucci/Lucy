@model Lucy.Models.MedicinaViewModel

@{
    ViewBag.Title = "Editar medicina";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>¡Error!</strong> @ViewBag.ErrorMessage
        </div>
    }

    <div class="form-horizontal">
        <h4>Medicina</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MedicinaId)

        <div class="form-group">
            @Html.LabelFor(model => model.MedicinaNombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicinaNombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicinaNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MedicinaDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicinaDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicinaDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MedicinaTipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MedicinaTipo, ViewBag.lMedTipos as SelectList, "Seleccionar", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MedicinaTipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MedicinaGeneral, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.MedicinaGeneral, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicinaGeneral, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="panel panel-default">
            <div class="panel-heading">Enfermedades</div>
            <div class="panel-body">
                <ul class="list-group">
                    @for (int i = 0; i < Model.Enfermedades.Count; i++)
                    {
                        <li class="list-group-item">
                            @Html.HiddenFor(model => model.Enfermedades[i].Id)
                            @Html.HiddenFor(model => model.Enfermedades[i].Nombre)
                            <label>@Html.CheckBoxFor(model => model.Enfermedades[i].Checked) @Model.Enfermedades[i].Nombre</label>
                        </li>
                    }
                </ul>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
