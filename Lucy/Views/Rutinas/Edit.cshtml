@model Lucy.Models.RutinaViewModel

@{
    ViewBag.Title = "Editar rutina";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>¡Error!</strong> @ViewBag.ErrorMessage
        </div>
    }

    <div class="form-horizontal">
        <h4>Rutina</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ContenidoId)

        <div class="form-group">
            @Html.LabelFor(model => model.ContenidoTitulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContenidoTitulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContenidoTitulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContenidoDescripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContenidoDescripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContenidoDescripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContenidoCuerpo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContenidoCuerpo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContenidoCuerpo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-lg-5 col-lg-offset-2 col-md-5 col-md-offset-2 col-sm-5 col-sm-offset-0">
                <div class="panel panel-default">
                    <div class="panel-heading">Ejercicios</div>
                    <div class="panel-body">
                        <ul class="list-group">
                            @for (int i = 0; i < Model.Ejercicios.Count; i++)
                            {
                                <li class="list-group-item">
                                    @Html.HiddenFor(model => model.Ejercicios[i].Id)
                                    @Html.HiddenFor(model => model.Ejercicios[i].Nombre)
                                    <label>@Html.CheckBoxFor(model => model.Ejercicios[i].Checked) @Model.Ejercicios[i].Nombre</label>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
