@model Lucy.Models.CalcTMBViewModel

@{
    ViewBag.Title = "Calculadora de TMB - ";
}

<h2>Calculadora de TMB</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (ViewBag.Persona != null)
    {
        <div id="persona">
            <p>Datos tomados de la persona<b> @ViewBag.Persona</b>. Puede modificarlos si desea hacer el 
            calculo con valores diferentes.</p>
        </div>
    }

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Sexo, ViewBag.listaSexos as SelectList, "Seleccionar", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelActividad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NivelActividad, ViewBag.lNivelesActividad as SelectList, "Seleccionar", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NivelActividad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Calcular" class="btn btn-default" />
            </div>
        </div>
    </div>

    
    <div id="resultados">
        <h4>Resultados: </h4>
        <hr />

        <p><b>Tasa de metabolismo basal:</b> @ViewBag.tmb</p>
        <p><b>Calorías aproximadas necesarias para mantener el peso:</b> @ViewBag.CaloriasParaMantenerse</p>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
