@model Lucy.Models.DatCliViewModel

@{
    var auxPersonaId = ViewBag.idPersona;
}

@using (Html.BeginForm("_datcli", "Personas", new { id = ViewBag.idPersona }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Modal -->
        <div class="modal fade" id="PopUpEliminarPersona" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">¡Atención!</h4>
                    </div>
                    <div class="modal-body">
                        <p>¿Está seguro de que desea eliminar esta persona?</p>
                    </div>
                    <div class="modal-footer">
                        <button onclick="confirmar(@auxPersonaId)" type="button" class="btn btn-primary" data-dismiss="modal">Aceptar</button>
                        <button type="button" class="btn btn-link" data-dismiss="modal">Cancelar</button>
                    </div>
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.PersonaNombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonaNombre, new { htmlAttributes = new { @class = "form-control", @maxlength = "20" } })
                @Html.ValidationMessageFor(model => model.PersonaNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonaApellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonaApellido, new { htmlAttributes = new { @class = "form-control", @maxlength = "20" } })
                @Html.ValidationMessageFor(model => model.PersonaApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonaFchNac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group date datetimepicker" style="max-width: 280px">
                    @Html.EditorFor(model => model.PersonaFchNac, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.PersonaFchNac, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SexoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SexoId, ViewBag.listaSexos as SelectList, "Seleccionar", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SexoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.DatCliNivelActividad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DatCliNivelActividad, ViewBag.lNivelesActividad as SelectList, "Seleccionar", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DatCliNivelActividad, "", new { @class = "text-danger" })
            </div>
        </div>
                
        <div class="form-group">
            @Html.LabelFor(model => model.PesoValor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PesoValor, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.PesoValor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatCliAltura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatCliAltura, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.DatCliAltura, "", new { @class = "text-danger" })
            </div>
        </div>


        @for (int i = 0; i < Model.Enfermedades.Count; i++)
        {
            <div class="form-group">
                @Html.Label(Model.Enfermedades[i].Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(model => model.Enfermedades[i].Id)
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Enfermedades[i].Checked, new { id = "enfermedad_" + Model.Enfermedades[i].Id })
                </div>
            </div>
        }

        <div id="info_diabetes">
            <h4>Diabetes</h4>

            @*<div class="form-group">
                @Html.LabelFor(model => model.DiabetesTipo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DiabetesTipo, ViewBag.listaTiposDiabetes as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DiabetesTipo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="diabetes_tipo_1">
                <div class="form-group">
                    @Html.LabelFor(model => model.DiabetesGlicemiaBaja, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DiabetesGlicemiaBaja, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.DiabetesGlicemiaBaja, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DiabetesGlicemiaAlta, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DiabetesGlicemiaAlta, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.DiabetesGlicemiaAlta, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.DiabetesHidratosPorUniInsu, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DiabetesHidratosPorUniInsu, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.DiabetesHidratosPorUniInsu, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InsulinaRetardadaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.InsulinaRetardadaId, ViewBag.listaInsulinasRetardadas as SelectList, "Seleccionar", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InsulinaRetardadaId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InsulinaCorreccionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.InsulinaCorreccionId, ViewBag.listaInsulinasCorreccion as SelectList, "Seleccionar", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InsulinaCorreccionId, "", new { @class = "text-danger" })
                </div>
            </div>
        @*</div>*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />

                @if (auxPersonaId != 0)
                {
                    <a href="#" class="btn btn-link" onclick="eliminarPersona()">Eliminar persona</a>
                }
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        if ($("#enfermedad_1").is(':checked')) {
            $("#info_diabetes").show();
        } else {
            $("#info_diabetes").hide();
        }
    });

    $("#enfermedad_1").change(function () {
        if ($("#enfermedad_1").is(':checked')) {
            $("#info_diabetes").show();
        } else {
            $("#info_diabetes").hide();
        }
    });

    $(function () {
        var ln = x = window.navigator.language || navigator.browserLanguage;
        $('.datetimepicker').datetimepicker({
            locale: 'es',
            viewMode: 'days',
            locale: ln,
            maxDate: 'now',
            format: 'L'
        });
    });
       

    function eliminarPersona() {
        $('#PopUpEliminarPersona').modal({
            show: 'true'
        });
    }

    function confirmar(idPer) {
        location.href = "/personas/eliminar/?id=" + idPer;

        //$.ajax({
        //    dataType: 'json',
        //    type: 'POST',
        //    data: { id: idPer },
        //    url: '/personas/eliminar',///?id=' + idPer,
        //    //success: location.reload()
        //});
        //window. = "/personas/datos_clinicos";
    }
</script>