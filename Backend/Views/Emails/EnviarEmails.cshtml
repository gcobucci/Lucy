@model Backend.Models.EmailViewModel

@{
    ViewBag.Title = "Enviar emails";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                @TempData["Success"]
            </div>
        }
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>¡Error!</strong> @ViewBag.ErrorMessage
            </div>
        }


        <div class="form-group">
            @Html.LabelFor(model => model.EnfermedadId, new { @class = "control-label col-md-2" , @style = "padding-top:0"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EnfermedadId, ViewBag.lEnfermedades as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EnfermedadId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <div class="checkbox">
                    <label>@Html.CheckBoxFor(model => model.RespetarDecisión)
                    Respetar a los usuarios que no desean recibir emails (solo desmarcar si es importante)</label>
                    @Html.ValidationMessageFor(model => model.RespetarDecisión, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asunto, new { @class = "control-label col-md-2" , @style = "padding-top:0"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Asunto, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Asunto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mensaje, new { @class = "control-label col-md-2" , @style = "padding-top:0"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Mensaje, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Mensaje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enviar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
